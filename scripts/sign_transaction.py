from adpu_call import send_to_ledger
from struct import unpack
import binascii

# command to generate txn
# ./skycoin-cli createRawTransaction -m '[{ "addr": "2cPurVYpW1MCqk7cjNjqDG531BoRCgJ8iTD", "coins": "3"}, { "addr": "hbWbgT97s7RoGEfqoiiJgV5pkdaAsBow3o", "coins": "3"}, { "addr": "qGJNvH2LM1jrawo1ZggreLYaTpwUXCkzWh", "coins": "3"}, { "addr": "HiDEhbBdNu2pSb3pbTLKKSbjWaqJTQWsAi", "coins": "1"}]' -f 2019_03_05_a794.wlt
# txn = "4b010000001f246df92297d3088cd5ebb9b97d0e9a4d251809476f61035c45e08fcb4b147a01000000e3aeb078583bdb968bed85fad21e1297f8d2c9f45153b0fb2e8d6d8690c0f1c45518afc1de947543a4a6322191c1547960d26a0c876d7577148b1285116da24600010000005e988727ab8128f5652ac6a8687813728e6457664b0e49c2b69a92d04afd03220500000000e81b683060ab6bb2428965e0d274a5f4dd85a74540420f000000000001000000000000000064e3311b82c8da9d8f04bf9ae29db7a661d4c75e40420f000000000001000000000000000077f2316fd44dec49d126ad6906ed4abf8ba4db4f40420f00000000000100000000000000002987824fe2b4ce03d23b09dc7f65c888ef38a51040420f0000000000010000000000000000316e6527b35f105ab161f648c7cb7415d72feba8808d5b0000000000bb94160000000000"

# txn = "4902000000ff0116355b93f831b21a7982310f042044a17ef3500bcbb24c31f5fb36727ee30400000046d30a31d9e2ebce08b4327b36b34309b9950e93a844a4f30bb52790956280ad597ed64bb003630e6e1813bb47b3eae77c8d016e9f2f8aa2ce3f24a70a42532d00be1d0a6a54452f3442eef5626d08c010e363dcb65dea11bfa91e9c2307c5cbeb426c2ad393aeacab5cd81064a77ae8113b03a8608fc2fd6b98f1ab343252c4530194236ecf1f351a74e062be6879817e14d00bda6841993ff501b90f20eaf102fd5501846c36548bfb42a003921df7a917e07e13e14f37dab2ccb7d27aba19ad2401f33b6eb6754af17cc4a8e00d2b7d6d2049552138c7c73b71dbd30cf7efa72562590176133867a3014d57b4f212a340231b3d8bb83d14157a8d2dbe0ac8a67cf400040000004c4539dd75ba8fc2583f9b25956932fb0694377ce57ea8acd44566a9561471f453112b2b4a1bd3b7456074555408c8f65eee7cb4781024b140a55db74772a397bfc797903f887e4110e4ea7e6f9436745f5d95da0568f84a78a41d26e5161ff8f912cd7ae57e825b30b998fb12d730cce3bb3557fd1a2000d21afd1f68ef478c0400000000e81b683060ab6bb2428965e0d274a5f4dd85a74540420f00000000001f000000000000000064e3311b82c8da9d8f04bf9ae29db7a661d4c75e40420f00000000001f000000000000000077f2316fd44dec49d126ad6906ed4abf8ba4db4f40420f00000000001f00000000000000002987824fe2b4ce03d23b09dc7f65c888ef38a51040420f00000000001e00000000000000"
# txn = "8f04000000d0575b4fa5d1a8e5ec890218a6e5c3b140cd5a3b89553b1758d73c7f4586832d0a00000073f9ba47f6d0221002647ee0295f24554b3211808fef0034200ac08564e2535a5f05c0c20feb03d4ae0ab374b98030f97ef52cf594e393fd4d333b17e4a7f0bd0165679f982704a7fb1d1887f626f4139fcc40f2c53220f70594098bf572c970f334a69ad29ba5b7cd9452e67ac3e6e777463b53749bdf281d957792952f0a9eb9003ba7d8f107046a1baf4d122ac889392ce59208b6b659d824a3326fffceb031324532775c61f949df8e0438fe50074bce1a3ecd71fa46a679a24cceb59fdb366a00e99adf17476f214759bdae2c1abe463caf14f917fbebe185058e2e8529a1703778c4cea5400b020c1829c7b371e995272229b8a42bd63ebcb984c898a43ce5ad00e257e137417e5612800664b3b49d21c82ed2e78fbb4b9f4039b744ba20eebae85f30f6ec50a411caa30d0d3a434a73f53eccb7b0c264d58b5a902520f295638300a4e1e64ba749f0fdb3f8b82f6c516c819b36c57fe88d1d881c5de431e71c9b811d1cf5e33271120d95aaee581deb301fabdb8b85328ad744df85974ae011488301283623e8c6c68375a7f501e8e79dcbd8426ce774e185c19a1d58690aec7b8ec552d779cc505135b7448b27dee2df37848c44ed05680516d0c9e590d0203898b5016ed9e9aac477b62cf94476c97f06f55a2df06319b6df132cf804072d0635f05b212f229ed0dae2f46fee48ca9235ab73dcbc4a3438390ba89ff4464e3d6f37440171442dcdc9ce045d74df2a9e15be0bdca8f60362da697f94138405e106b4ef457e37749250570c2a50b8d93678284773d06dced4383c34ec78b8d320445fccf300781635652756ce1838e99dd21cb822a87ab53cb67b9c2129b9256e6f6ea12a0f0ac4c4194ca461b3eaeaaea0fcc553a92980d9bf596b67e1d95debb1022103be000a0000004c4539dd75ba8fc2583f9b25956932fb0694377ce57ea8acd44566a9561471f453112b2b4a1bd3b7456074555408c8f65eee7cb4781024b140a55db74772a397bfc797903f887e4110e4ea7e6f9436745f5d95da0568f84a78a41d26e5161ff8f912cd7ae57e825b30b998fb12d730cce3bb3557fd1a2000d21afd1f68ef478c16cd08f1c862c7e8f0e5efcb9f7484d1006ab9393751923fc4acd64cdfe936b98b98ba11205b8621b40717206aa5563414746aedf2d680eb7b3f9a6b333df48c4773436860aa816999a2b66242630dde9d7dedf76043b1a6c48ba39419570f46a5ce3095b150c1b5b8fb0c6f2b488b20f366a720f77ac06c190290a63a57539dc14f0defbf4a1388c041ccc2dbd2b6d2c2048662fc19ad8e8046d5ba00a46fac47d219c29179675bf186c0dc7a882c6e12adcef205a86cb03952a5c5d2b3e6720400000000e81b683060ab6bb2428965e0d274a5f4dd85a745c0c62d0000000000c1e10100000000000064e3311b82c8da9d8f04bf9ae29db7a661d4c75ec0c62d0000000000c1e10100000000000077f2316fd44dec49d126ad6906ed4abf8ba4db4fc0c62d0000000000c1e1010000000000002987824fe2b4ce03d23b09dc7f65c888ef38a51040420f0000000000c0e1010000000000"
# From SkyCoin example https://github.com/skycoin/skycoin/tree/develop/cmd/cli#decode-a-raw-transaction
# txn = "dc00000000247bd0f0a1cf39fa51ea3eca044e4d9cbb28fff5376e90e2eb008c9fe0af384301000000cf5869cb1b21da4da98bdb5dca57b1fd5a6fcbefd37d4f1eb332b21233f92cd62e00d8e2f1c8545142eaeed8fada1158dd0e552d3be55f18dd60d7e85407ef4f000100000005e524872c838de517592c9a495d758b8ab2ec32d3e4d3fb131023a424386634020000000007445b5d6fbbb1a7d70bef941fb5da234a10fcae40420f00000000000100000000000000008001532c3a705e7e62bb0bb80630ecc21a87ec090024f400000000009805000000000000"
txn = "0100000085db6d003c46b106a9262c68340db4ee98bc4549f5e79bf13a1deab50efae1230100000000316E6527B35F105AB161F648C7CB7415D72FEBA810270000000000000100000000000000"

def send_txn(txn):
    # Packets can be max at 255 size = dongle.apduMaxDataSize()
    i = 0
    p1 = 0x0
    while i*2*254 < len(txn):
        ret = send_to_ledger(ins=0x10,p1=p1, data=txn[i*254*2:(i+1)*254*2])
        p1 = 0x1
        i += 1
    ret =binascii.hexlify(ret)
    while len(ret)//2 < 32 + unpack("<L", binascii.a2b_hex(txn[:8]))[0]*65:
        ret = ret + binascii.hexlify(send_to_ledger(ins=0x10, p1=p1, data=""))
    # print 2*len(ret)
    # print unpack("<L", binascii.a2b_hex(txn[:8]))[0]*65 + 32
    # txn = binascii.hexlify(ret)
    txn = ret
    inner_hash = txn[:32*2]
    txn = txn[32*2:]
    sigs = []
    while len(txn) > 0:
        sigs.append(txn[:65*2])
        txn = txn[65*2:]

    return inner_hash, sigs

if __name__ == "__main__":
    inner_hash, sigs = send_txn(txn)
    print "\n"
    print "inner hash " + inner_hash
    for sig in sigs:
        print "signature " + sig
